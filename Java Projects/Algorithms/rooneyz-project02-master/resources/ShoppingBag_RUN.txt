-----------------------------------------------------
-----------------------------------------------------
Test file: resources/groceries.txt 
budget: 2000

NOTES: Testing target budget > sum of all elements.
-----------------------------------------------------
The list of groceries has 8 items. 
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
2000
You can buy everything on your list!

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 823405 ns
Purchased grocery prices are:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]
Done with ShoppingBag.

---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt 
budget: 17.5

NOTES: Testing set of elements found with sums
       to exactly to target budget.
---------------------------------------------------

The list of groceries has 8 items. 
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
17.5
Found an exact match for your budget!

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 1 ms : 59242 ns
Purchased grocery prices are:
[2.5, 15.0]
Done with ShoppingBag.


---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt 
budget: 20

NOTES: Testing target budget returning closest match.
---------------------------------------------------

[The list of groceries has 8 items. 
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
22.85
Can't use your whole budget but here is the list closest to it with sum of : 22.5

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 1 ms : 870431 ns
Purchased grocery prices are:
[4.0, 11.5, 7.0]
Done with ShoppingBag.


---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt 
budget: 1

NOTES: Testing target budget too low.
---------------------------------------------------

The list of groceries has 8 items. 
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
1
You don't have enough money to buy anything at the store

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 743680 ns
Purchased grocery prices are:
[]
Done with ShoppingBag.


---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt 
budget: 20

NOTES: Testing target budget at max sum of items.
---------------------------------------------------

The list of groceries has 8 items. 
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
58
You can buy everything on your list!

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 860018 ns
Purchased grocery prices are:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]
Done with ShoppingBag.



---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt 
budget: -1

NOTES: Testing target budget with negative money
---------------------------------------------------

The list of groceries has 8 items. 
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
-1
You don't have enough money to buy anything at the store

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 893136 ns
Purchased grocery prices are:
[]
Done with ShoppingBag.


---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt 
budget: 20

NOTES: Testing target budget at one of my lucky numbers
---------------------------------------------------

The list of groceries has 8 items. 
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
11
Found an exact match for your budget!

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 906346 ns
Purchased grocery prices are:
[4.0, 7.0]
Done with ShoppingBag.

